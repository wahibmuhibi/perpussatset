name: Build, Test, and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest

  deploy:
    needs: build-test 
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get latest Docker image tag
      id: get-latest-tag
      run: |
        echo ::set-output name=TAG::$(docker pull -q wahibmuhibi/webapp | awk '{ print $3 }')

    - name: Stop and remove existing container
      run: |
        docker stop webapp || true
        docker rm webapp || true

    - name: Run Docker container with dynamic tag
      run: |
        docker run -d -p 80:5000 --name webapp wahibmuhibi/webapp:${{ steps.get-latest-tag.outputs.TAG }}

  security-scan:
    runs-on: ubuntu-latest
    needs: build-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Start ZAP
      run: docker run -u zap -d -p 8080:8080 -i zaproxy/zap-stable zap.sh -daemon -port 8080 -host 0.0.0.0 -config api.disablekey=true

    - name: Wait for ZAP to start
      run: sleep 60

    - name: Run ZAP baseline scan
      run: docker run -v $(pwd):/zap/wrk/ -e HOST_UID=$(id -u) -e HOST_GID=$(id -g) -i zaproxy/zap-stable zap-baseline.py -t http://13.239.137.109:5000 -g /zap/wrk/gen.conf -r /zap/wrk/zap_report.html

    - name: Upload ZAP report
      uses: actions/upload-artifact@v2
      with:
        name: ZAP Report
        path: zap_report.html
